<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <name>Mega Filter PRO</name>
    <version>1.0</version>
    <author>info@ocdemo.eu</author>
    <link>mailto:info@ocdemo.eu</link>
	<code>Mega Filter PRO</code>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="catalog/controller/common/header.php|catalog/controller/extension/module/category.php">
		<operation error="skip">
			<search><![CDATA['filter_sub_category' => true]]></search>
			<add position="replace"><![CDATA[				
				'filter_sub_category' => true,
				'mfp_disabled' => true
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<!-- Layout -->
	<file path="admin/controller/design/layout.php">
		<operation>
			<search><![CDATA[foreach ($extensions as $code) {]]></search>
			<add position="after"><![CDATA[				
				if( $code == 'mega_filter' ) continue;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->response->setOutput(]]></search>
			<add position="before"><![CDATA[
				if( __FUNCTION__ == 'getForm' && isset( $data['layout_modules'] ) ) {
					foreach( $data['layout_modules'] as $mfp_k => $mfp_v ) {
						if( strpos( $mfp_v['code'], 'mega_filter' ) === 0 ) {
							unset( $data['layout_modules'][$mfp_k] );
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="admin/model/design/layout.php">
		<operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "layout_module WHERE layout_id = '" . (int)$layout_id . "']]></search>
			<add position="replace"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "layout_module WHERE layout_id = '" . (int)$layout_id . "'" . ( __FUNCTION__ == 'editLayout' ? " AND `code` NOT REGEXP '^mega_filter'" : '' ) . "]]></add>
		</operation>
	</file>
	
	<!-- // MF tooltip ///////////////////////////////////////////////////// -->
	<file path="admin/controller/catalog/filter.php">
		<operation>
			<search><![CDATA[$this->load->language('catalog/filter');]]></search>
			<add position="before"><![CDATA[$this->load->language('extension/module/mega_filter');]]></add>
		</operation>
		<operation>
			<search><![CDATA[function getForm() {]]></search>
			<add position="after"><![CDATA[$data['text_mf_tooltip'] = $this->language->get('text_mf_tooltip');]]></add>
		</operation>
	</file>
	
	<file path="admin/model/catalog/filter.php">
		<operation>
			<search><![CDATA[name = '" . $this->db->escape($value['name']) . "']]></search>
			<add position="replace"><![CDATA[name = '" . $this->db->escape($value['name']) . "', mf_tooltip = '" . $this->db->escape($value['mf_tooltip']) . "']]></add>
		</operation>
		<operation>
			<search><![CDATA[$filter_group_data[$result['language_id']]]]></search>
			<add position="after"><![CDATA[$filter_group_data[$result['language_id']]['mf_tooltip'] = $result['mf_tooltip'];]]></add>
		</operation>
	</file>
	
	<file path="admin/view/template/catalog/filter_form.twig">
		<operation>
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-sort-order">]]></search>
			<add position="before"><![CDATA[
				<div class="form-group">
					<label class="col-sm-2 control-label">{{ text_mf_tooltip }}</label>
					<div class="col-sm-10">
						{% for language in languages %}
							<div class="input-group">
								<span class="input-group-addon"><img src="language/{{ language.code }}/{{ language.code }}.png" title="{{ language.name }}" /></span>
								<input type="text" name="filter_group_description[{{ language.language_id }}][mf_tooltip]" value="{{ filter_group_description[language.language_id] ? filter_group_description[language.language_id].mf_tooltip }}" class="form-control" />
							</div>
						{% endfor %}
					</div>
				</div>
				<div class="form-group">
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<!-- Controller -->
	<file path="system/engine/controller.php">
		<operation>
			<search><![CDATA[class Controller {]]></search>
			<add position="after"><![CDATA[
				protected function rgetMFP( $name ){
					if( isset( $this->registry->get('request')->post[$name] ) ) {
						return $this->registry->get('request')->post[$name];
					}

					if( isset( $this->registry->get('request')->get[$name] ) ) {
						return $this->registry->get('request')->get[$name];
					}

					return null;
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->registry = $registry;]]></search>
			<add position="after"><![CDATA[
				if( 
					! defined( 'HTTP_CATALOG' ) && 
					$this->registry->get('config') && 
					$this->rgetMFP( $this->registry->get('config')->get('mfilter_url_param')?$this->registry->get('config')->get('mfilter_url_param'):'mfp' ) && 
					! $this->registry->get('config')->get('mfp_path_was_verificed') && 
					( isset( $this->registry->get('request')->get['route'] ) || get_class( $this ) == 'ControllerStartupRouter' ) && 
					$this->registry->get('config')->get('config_language_id') 
				) {
					preg_match( '/path\[([^]]*)\]/', $this->rgetMFP( $this->registry->get('config')->get('mfilter_url_param')?$this->registry->get('config')->get('mfilter_url_param'):'mfp' ), $mf_matches );
								
					if( class_exists( 'VQMod' ) ) {
						require_once VQMod::modCheck( modification( DIR_SYSTEM . '../catalog/model/extension/module/mega_filter.php' ) );
					} else {
						require_once modification( DIR_SYSTEM . '../catalog/model/extension/module/mega_filter.php' );
					}
				
					if( empty( $mf_matches[1] ) ) {
						preg_match( '#path,([^/]+)#', $this->rgetMFP( $this->registry->get('config')->get('mfilter_url_param')?$this->registry->get('config')->get('mfilter_url_param'):'mfp' ), $mf_matches );
				
						if( ! empty( $mf_matches[1] ) ) {				
							if( class_exists( 'MegaFilterCore' ) ) {
								$mf_matches[1] = MegaFilterCore::__parsePath( $this, $mf_matches[1] );
							}
						}
					} else if( class_exists( 'MegaFilterCore' ) ) {
						$mf_matches[1] = MegaFilterCore::__parsePath( $this, $mf_matches[1] );
					}

					if( ! empty( $mf_matches[1] ) ) {
						if( ! $this->rgetMFP('mfilterAjax') && $this->rgetMFP('path') && $this->rgetMFP('path') != $mf_matches[1] ) {
							$this->registry->get('request')->get['mfp_org_path'] = $this->rgetMFP('path');
				
							if( 0 === ( $mf_strpos = strpos( $this->rgetMFP('mfp_org_path'), $mf_matches[1] . '_' ) ) ) {
								$this->registry->get('request')->get['mfp_org_path'] = substr( $this->rgetMFP('mfp_org_path'), $mf_strpos+strlen($mf_matches[1])+1 );
							}
						} else {
							$this->registry->get('request')->get['mfp_org_path'] = '';
						}
				
						//$this->registry->get('request')->get['path'] = $mf_matches[1];
						$this->registry->get('request')->get['mfp_path'] = $mf_matches[1];

						if( isset( $this->registry->get('request')->get['category_id'] ) || ( isset( $this->registry->get('request')->get['route'] ) && in_array( $this->registry->get('request')->get['route'], array( 'product/search', 'product/special', 'product/manufacturer/info' ) ) ) ) {
							$mf_matches = explode( '_', $mf_matches[1] );
							$this->registry->get('request')->get['category_id'] = end( $mf_matches );
						}
					}
				
					unset( $mf_matches );
				
					if( method_exists( $this->registry->get('config'), 'set' ) ) {
						$this->registry->get('config')->set('mfp_path_was_verificed', true);
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="catalog/controller/product/special.php">
		<operation>
			<search><![CDATA[$product_total = $this->model_catalog_product->getTotalProductSpecials();]]></search>
			<add position="before"><![CDATA[
				if( isset( $this->request->get['category_id'] ) ) {
					$filter_data['filter_category_id'] = (int) $this->request->get['category_id'];
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<!-- SEO -->
	<file path="catalog/controller/common/seo_mega_pack_pro_url.php" error="skip">
		<operation error="log">
			<search><![CDATA[if( $route != $alias ) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/module/mega_filter');
				
				$route = $this->model_extension_module_mega_filter->removeSeoMfpFromUrl( $route, true );
			]]></add>
		</operation>
		<operation error="log">
			<search><![CDATA[unset( $url_data['route'] );]]></search>
			<add position="before"><![CDATA[
				if( ! isset( $this->model_extension_module_mega_filter ) ) {
					$this->load->model( 'extension/module/mega_filter' );
				}
				
				if( ! defined( 'HTTP_CATALOG' ) ) {
					$mfp_rewrite = $this->model_extension_module_mega_filter->rewrite( $url, $url_data );
					$url = array_shift( $mfp_rewrite );
					$url_data = array_shift( $mfp_rewrite );
				}
			]]></add>
		</operation>
		<operation error="log">
			<search><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE keyword = '" . $this->db->escape($part) . "' AND store_id = " . (int)$this->_config_store_id);]]></search>
			<add position="after"><![CDATA[
				$mfilterSeoConfig = $this->config->get('mega_filter_seo');
				
				if( ( ! empty( $mfilterSeoConfig['enabled'] ) || ! empty( $mfilterSeoConfig['aliases_enabled'] ) ) && ! $query->num_rows ) {
					$mfp_path = implode( '/', array_slice( $parts, 0, -1 ) );
					$mfp_path = class_exists( 'MegaFilterCore' ) ? MegaFilterCore::preparePath( $this, $mfp_path ) : $mfp_path;
				
					$mfilter_query = $this->db->query( "
						SELECT 
							* 
						FROM 
							`" . DB_PREFIX . "mfilter_url_alias` 
						WHERE 
							`alias` = '" . $this->db->escape( $part ) . "' AND 
							" . ( empty( $mfilterSeoConfig['redirect_to_correct_lang_by_seo_url'] ) ? "`language_id` = " . (int)$this->config->get('config_language_id') . " AND" : '' ) . "
							`path` = '" . $this->db->escape( $mfp_path ) . "' AND
							`store_id` = " . (int)$this->config->get('config_store_id')
					);
				
					if( $mfilter_query->num_rows ) {
						if( $this->config->get('config_language_id') != $mfilter_query->row['language_id'] && class_exists( 'MegaFilterCore' ) ) {
							MegaFilterCore::redirectToCorrectLang( $this, $mfilter_query->row );
						}
				
						if( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') === null ) {
							$this->request->get[($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp')] = $mfilter_query->row['mfp'];
						}
						$this->request->request['mfp_seo_alias'] = $part;
				
						break;
					}
				}				
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/startup/seo_url.php" error="skip">
		<operation error="log">
			<search><![CDATA[unset($data['route']);]]></search>
			<add position="before"><![CDATA[
				if( ! isset( $this->model_extension_module_mega_filter ) ) {
					$this->load->model( 'extension/module/mega_filter' );
				}
				
				if( ! defined( 'HTTP_CATALOG' ) ) {
					$mfp_rewrite = $this->registry->get('model_extension_module_mega_filter')->rewrite( $url, $data );
					$url = array_shift( $mfp_rewrite );
					$data = array_shift( $mfp_rewrite );
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/common/seo_mega_pack_pro_url.php|catalog/controller/startup/seo_url.php" error="skip">
		<operation error="log">
			<search regex="true"><![CDATA[~foreach *\( *\$parts as \$part *\) \{~]]></search>
			<add position="replace"><![CDATA[
				$mfilterSeoConfig = $this->config->get( 'mega_filter_seo' );

				if( ! empty( $mfilterSeoConfig['enabled'] ) ) {
					if( class_exists( 'VQMod' ) ) {
						require_once VQMod::modCheck( modification( DIR_SYSTEM . 'library/mfilter_core.php' ) );
					} else {
						require_once modification( DIR_SYSTEM . 'library/mfilter_core.php' );
					}
				
					if( class_exists( 'MegaFilterCore' ) ) {
						$parts = MegaFilterCore::prepareSeoParts( $this, $parts );
					}
				}
				
				foreach ($parts as $part) {
					if( ! empty( $mfilterSeoConfig['enabled'] ) && class_exists( 'MegaFilterCore' ) && MegaFilterCore::prepareSeoPart( $this, $part ) ) {
						continue;
					}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/startup/seo_url.php" error="skip">
		<operation error="log">
			<search><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE keyword = '" . $this->db->escape($part) . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "'");]]></search>
			<add position="after"><![CDATA[
				$mfilterSeoConfig = $this->config->get('mega_filter_seo');
				
				if( ( ! empty( $mfilterSeoConfig['enabled'] ) || ! empty( $mfilterSeoConfig['aliases_enabled'] ) ) && ! $query->num_rows ) {
					$mfp_path = implode( '/', array_slice( $parts, 0, -1 ) );
					$mfp_path = class_exists( 'MegaFilterCore' ) ? MegaFilterCore::preparePath( $this, $mfp_path ) : $mfp_path;
				
					$mfilter_query = $this->db->query( "
						SELECT 
							* 
						FROM 
							`" . DB_PREFIX . "mfilter_url_alias` 
						WHERE 
							`alias` = '" . $this->db->escape( $part ) . "' AND 
							" . ( empty( $mfilterSeoConfig['redirect_to_correct_lang_by_seo_url'] ) ? "`language_id` = " . (int)$this->config->get('config_language_id') . " AND" : '' ) . "
							`path` = '" . $this->db->escape( $mfp_path ) . "' AND
							`store_id` = " . (int)$this->config->get('config_store_id')
					);
				
					if( $mfilter_query->num_rows ) {
						if( $this->config->get('config_language_id') != $mfilter_query->row['language_id'] && class_exists( 'MegaFilterCore' ) ) {
							MegaFilterCore::redirectToCorrectLang( $this, $mfilter_query->row );
						}
				
						if( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') === null ) {
							$this->request->get[($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp')] = $mfilter_query->row['mfp'];
						}
						$this->request->request['mfp_seo_alias'] = $part;
				
						continue;
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="system/library/seopro.php" error="skip">
		<operation>
			<search><![CDATA[private $config;]]></search>
			<add position="after"><![CDATA[
				private $mfilter_cache_data = null;
				private $mfilter_seo_config;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->queries = $this->cache->get('seopro.queries');]]></search>
			<add position="after"><![CDATA[				
				if( ! empty( $this->mfilter_seo_config['enabled'] ) || ! empty( $this->mfilter_seo_config['aliases_enabled'] ) ) {
					$this->mfilter_cache_data = $this->cache->get('seopro_mfp_'.$this->config->get('config_store_id'));
					
					if( ! $this->mfilter_cache_data ) {
						$mfilter_query = $this->db->query( "SELECT * FROM `" . DB_PREFIX . "mfilter_url_alias` WHERE `store_id` = " . (int)$this->config->get('config_store_id'));
					
						foreach ($mfilter_query->rows as $row) {
							$this->mfilter_cache_data[mb_strtolower($row['alias'].'::'.$row['path'],'utf8')][$row['language_id']] = $row['mfp'];
						}

						$this->cache->set('seopro_mfp_'.$this->config->get('config_store_id'), $this->mfilter_cache_data);
					}
				}				
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->config = $registry->get('config');]]></search>
			<add position="after"><![CDATA[
				$this->mfilter_seo_config = $this->config->get( 'mega_filter_seo' );
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[private $config;]]></search>
			<add position="replace"><![CDATA[public $config;]]></add>
		</operation>
		<operation>
			<search><![CDATA[private $request;]]></search>
			<add position="replace"><![CDATA[public $request;]]></add>
		</operation>
		<operation>
			<search><![CDATA[private $db;]]></search>
			<add position="replace"><![CDATA[public $db;]]></add>
		</operation>
		<operation>
			<search><![CDATA[private $response;]]></search>
			<add position="replace"><![CDATA[public $response;]]></add>
		</operation>
		<operation>
			<search><![CDATA[private $session;]]></search>
			<add position="replace"><![CDATA[public $session;]]></add>
		</operation>
		<operation>
			<search><![CDATA[baseRewrite($data, $language_id) {]]></search>
			<add position="after"><![CDATA[
				$mfp_data = $data;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['product_id'] = $product_id;]]></search>
			<add position="after"><![CDATA[
				if( isset( $mfp_data[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) ) {
					$data[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] = $mfp_data[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'];
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[function prepareRoute($parts) {]]></search>
			<add position="after"><![CDATA[
				if( ! empty( $parts ) && is_array( $parts ) ) {
					if( '' !== ( $mfp_last_part = array_pop( $parts ) ) ) {
						array_push( $parts, $mfp_last_part );
					}

					$mfp_path = implode( '/', array_slice( $parts, 0, -1 ) );
					$mfp_path = class_exists( 'MegaFilterCore' ) ? MegaFilterCore::preparePath( $this, $mfp_path ) : $mfp_path;
				}
				
				$mfp_parts = $parts;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$query = $this->getQueryByKeyword($parts[$id]);]]></search>
			<add position="after"><![CDATA[
				$mfp_was_last_part = false;
				
				if( is_null( $query ) && ( ! empty( $this->mfilter_seo_config['enabled'] ) || ! empty( $this->mfilter_seo_config['aliases_enabled'] ) ) ) {
					$mfp_url_param = $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp';
					$mfp_value = null;
				
					if( $this->config->get('config_seo_url_cache') ) {
						$mfp_key = mb_strtolower($parts[$id].'::'.$mfp_path,'utf8');
						
						if( isset( $this->mfilter_cache_data[$mfp_key] ) ) {
							if( isset( $this->mfilter_cache_data[$mfp_key][$this->config->get('config_language_id')] ) ) {
								$mfp_value = $this->mfilter_cache_data[$mfp_key][$this->config->get('config_language_id')];
							} else if( class_exists( 'MegaFilterCore' ) ) {
								$mf_language_ids = array_keys( $this->mfilter_cache_data[$mfp_key] );
								MegaFilterCore::redirectToCorrectLang( $this, array( 'language_id' => current( $mf_language_ids ) ) );
							}
						}
					} else if( null != ( $mfilter_query = $this->db->query( "SELECT * FROM `" . DB_PREFIX . "mfilter_url_alias` WHERE `alias` = '" . $this->db->escape($parts[$id]) . "' AND `path` = '" . $this->db->escape( $mfp_path ) . "' AND `store_id` = " . (int)$this->config->get('config_store_id'))->row ) ) {
						if( $this->config->get('config_language_id') == $mfilter_query['language_id'] ) {
							$mfp_value = $mfilter_query['mfp'];
						} else if( class_exists( 'MegaFilterCore' ) ) {
							MegaFilterCore::redirectToCorrectLang( $this, $mfilter_query );
						}
					}
				
					if( ! is_null( $mfp_value ) ) {
						if( ! isset( $this->request->get[$mfp_url_param] ) && ! isset( $this->request->post[$mfp_url_param] ) ) {
							$this->request->get[$mfp_url_param] = $mfp_value;
						}

						$this->request->request['mfp_seo_alias'] = $parts[$id];
						unset($parts[$id]);
				
						$mfp_was_last_part = true;
						
						continue;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[if(!$query) {]]></search>
			<add position="replace"><![CDATA[if(!$query && empty( $mfp_was_last_part )) {]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->request->get['route'] = 'product/category';]]></search>
			<add position="replace"><![CDATA[
				if( empty( $this->request->get['route'] ) || strpos( $this->request->get['route'], 'extension/module/mega_filter' ) === false ) {
					if( null != ( $mfp_route = $mfp_parts ? $this->getQueryByKeyword( $mfp_parts[0] ) : null ) && strpos( $mfp_route, '/' ) !== false ) {
						$this->request->get['route'] = $mfp_route;
					} else {
						$mfp_url_param = $this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp';
						$mfp_url_value = isset( $this->request->post[$mfp_url_param] ) ? $this->request->post[$mfp_url_param] : ( isset( $this->request->get[$mfp_url_param] ) ? $this->request->get[$mfp_url_param] : null );
				
						if( $mfp_url_value ) {
							preg_match( '/path\[([^]]*)\]/', $mfp_url_value, $mf_matches );

							if( empty( $mf_matches[1] ) ) {
								preg_match( '#path,([^/]+)#', $mfp_url_value, $mf_matches );
							}

							if( ! empty( $mf_matches[1] ) && isset( $this->request->get['manufacturer_id'] ) ) {
								$this->request->get['route'] = 'product/manufacturer/info';
							} else {
								$this->request->get['route'] = 'product/category';
							}
						} else {
							$this->request->get['route'] = 'product/category';
						}
					}
				}
			]]></add>
		</operation>
		<operation error="log">
			<search><![CDATA[return [$url, $data, $postfix];]]></search>
			<add position="before"><![CDATA[
				if( isset( $route ) ) {
					if( ! $this->registry->get('model_extension_module_mega_filter') ) {
						$this->registry->get('load')->model( 'extension/module/mega_filter' );
					}

					if( ! defined( 'HTTP_CATALOG' ) ) {
						$mfp_data = $data + array( 'route' => $route );

						if( null != ( $mfp_rewrite = $this->registry->get('model_extension_module_mega_filter')->rewrite( $url, $mfp_data ) ) ) {
							if( '' !== ( $mfp_url = rtrim( array_shift( $mfp_rewrite ), '/' ) ) ) {
								$url = $mfp_url;
								$data = array_shift( $mfp_rewrite );
							}
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/seo_pro.php|catalog/controller/startup/seo_pro.php|system/library/seopro.php" error="skip">
		<operation error="skip">
			<search><![CDATA[if (rawurldecode($url) != rawurldecode($seo)]]></search>
			<add position="replace"><![CDATA[if (rawurldecode($url) != rawurldecode($seo) && strpos($url,($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=')===false]]></add>
		</operation>
		<operation>
			<search><![CDATA[function validate() {]]></search>
			<add position="after"><![CDATA[
				if( isset( $this->request->get['route'] ) && strpos( $this->request->get['route'], 'extension/module/mega_filter' ) !== false ) {
					return;
				}
				
				if( isset( $this->request->get[($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp')] ) ) {
					return;
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$parts = explode(]]></search>
			<add position="after"><![CDATA[
				$mfp_parts = explode('/', trim(isset($_GET['_route_'])?$_GET['_route_']:(isset($route_)?$route_:$route), '/'));

				if( ! empty( $this->mfilter_seo_config['enabled'] ) ) {
					if( class_exists( 'VQMod' ) ) {
						require_once VQMod::modCheck( modification( DIR_SYSTEM . 'library/mfilter_core.php' ) );
					} else {
						require_once modification( DIR_SYSTEM . 'library/mfilter_core.php' );
					}
				
					if( class_exists( 'MegaFilterCore' ) ) {
						$parts = MegaFilterCore::prepareSeoParts( $this, $mfp_parts );
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/seo_pro.php|catalog/controller/startup/seo_pro.php" error="skip">
		<operation>
			<search><![CDATA[private $cache_data = null;]]></search>
			<add position="after"><![CDATA[
				private $mfilter_cache_data = null;
				private $mfilter_seo_config;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[parent::__construct($registry);]]></search>
			<add position="after"><![CDATA[
				$this->mfilter_seo_config = $this->config->get( 'mega_filter_seo' );
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->request->get['route'] = 'product/category';]]></search>
			<add position="replace"><![CDATA[
				if( empty( $this->request->get['route'] ) || strpos( $this->request->get['route'], 'extension/module/mega_filter' ) === false ) {
					if( isset( $queries[$parts[0]] ) && strpos( $queries[$parts[0]], '/' ) !== false ) {
						$this->request->get['route'] = $queries[$parts[0]];
					} else {
						if( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') ) {
							preg_match( '/path\[([^]]*)\]/', $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'), $mf_matches );

							if( empty( $mf_matches[1] ) ) {
								preg_match( '#path,([^/]+)#', $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'), $mf_matches );
							}

							if( ! empty( $mf_matches[1] ) && isset( $this->request->get['manufacturer_id'] ) ) {
								$this->request->get['route'] = 'product/manufacturer/info';
							} else {
								$this->request->get['route'] = 'product/category';
							}
						} else {
							$this->request->get['route'] = 'product/category';
						}
					}
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->cache_data = $this->cache->get('seo_pro]]></search>
			<add position="after"><![CDATA[
				if( ! empty( $this->mfilter_seo_config['enabled'] ) || ! empty( $this->mfilter_seo_config['aliases_enabled'] ) ) {
					$this->mfilter_cache_data = $this->cache->get('seopro_mfp_'.$this->config->get('config_store_id'));
					
					if( ! $this->mfilter_cache_data ) {
						$mfilter_query = $this->db->query( "SELECT * FROM `" . DB_PREFIX . "mfilter_url_alias` WHERE `store_id` = " . (int)$this->config->get('config_store_id'));
					
						foreach ($mfilter_query->rows as $row) {
							$this->mfilter_cache_data[mb_strtolower($row['alias'].'::'.$row['path'],'utf8')][$row['language_id']] = $row['mfp'];
						}

						$this->cache->set('seopro_mfp_'.$this->config->get('config_store_id'), $this->mfilter_cache_data);
					}
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[foreach ($parts as $keyword) {]]></search>
			<add position="replace"><![CDATA[
				$mfp_parts = array();
				$mfp_key = $mfp_key2 = 0;
				
				foreach ($parts as $keyword) {
					$mfp_keyword = isset( $org_parts[$mfp_key2] ) ? $org_parts[$mfp_key2] : $keyword;
					$mfp_key2++;
					
					if( ! empty( $this->mfilter_seo_config['enabled'] ) ) {
						if( class_exists( 'MegaFilterCore' ) && MegaFilterCore::prepareSeoPart( $this, $mfp_keyword ) ) {
							continue;
						} else {
							$mfp_parts[] = $keyword;
						}
					} else {
						$mfp_parts[] = $keyword;
					}
				
					$mfp_key++;
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[if (count($rows) == sizeof($parts)) {]]></search>
			<add position="before"><![CDATA[
				$parts = $mfp_parts;
				
				if( null !== ( $mfp_last_part = array_pop( $mfp_parts ) ) ) {
					$mfp_parts[] = $mfp_last_part;
					$mfp_path = implode( '/', array_slice( $parts, 0, -1 ) );
					$mfp_path = class_exists( 'MegaFilterCore' ) ? MegaFilterCore::preparePath( $this, $mfp_path ) : $mfp_path;
					$mfp_cache_key = $mfp_last_part . '::' . $mfp_path;
				
					if( isset( $this->mfilter_cache_data[$mfp_cache_key][$this->config->get('config_language_id')] ) ) {
						$this->request->get[($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp')] = $this->mfilter_cache_data[$mfp_cache_key][$this->config->get('config_language_id')];
						$rows[] = array('keyword' => $keyword, 'query' => ($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'='.$this->mfilter_cache_data[$mfp_cache_key][$this->config->get('config_language_id')]);
						$this->request->request['mfp_seo_alias'] = $mfp_last_part;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[parent::__construct($registry);]]></search>
			<add position="after"><![CDATA[
				$this->mfilter_seo_config = $this->config->get( 'mega_filter_seo' );
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="catalog/model/catalog/product.php">
		<operation>
			<search><![CDATA[$query = $this->db->query("]]></search>
			<add position="replace"><![CDATA[$sql = ("]]></add>
		</operation>
		<operation>
			<search><![CDATA[$sql = ("]]></search>
			<add position="after"><![CDATA[$query = $this->db->query($sql);]]></add>
		</operation>
		<operation>
			<search><![CDATA[$query = $this->db->query($sql);]]></search>
			<add position="before"><![CDATA[
				if( in_array( __FUNCTION__, array( 'getProducts', 'getTotalProducts', 'getProductSpecials', 'getTotalProductSpecials' ) ) ) {				
					if( isset( $this->request->get[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) || isset( $this->request->post[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) || ( NULL != ( $mfSettings = $this->config->get('mega_filter_settings') ) && isset( $mfSettings['in_stock_default_selected'] ) && $mfSettings['in_stock_default_selected'] == '1' ) ) {
						if( empty( $data['mfp_disabled'] ) && ! empty( $data['mfp_enabled'] ) ) {
							$this->load->model( 'extension/module/mega_filter' );
					
							if( class_exists( 'MegaFilterCore' ) ) {
								$sql = MegaFilterCore::newInstance( $this, $sql, isset( $data ) ? $data : array() )->getSQL( __FUNCTION__ );
							}
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="catalog/controller/product/category.php">
		<operation>
			<search><![CDATA[$product_total = $this->model_catalog_product->getTotalProducts($filter_data);]]></search>
			<add position="before"><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
		
				if( ! empty( $fmSettings['show_products_from_subcategories'] ) ) {
					if( ! empty( $fmSettings['level_products_from_subcategories'] ) ) {
						$fmLevel = (int) $fmSettings['level_products_from_subcategories'];
						$fmPath = explode( '_', ! $this->rgetMFP('path') ? '' : $this->rgetMFP('path') );

						if( $fmPath && count( $fmPath ) >= $fmLevel ) {
							$filter_data['filter_sub_category'] = '1';
						}
					} else {
						$filter_data['filter_sub_category'] = '1';
					}
				}
				
				if( ! empty( $this->request->get['manufacturer_id'] ) ) {
					$filter_data['filter_manufacturer_id'] = (int) $this->request->get['manufacturer_id'];
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/search.php">
		<operation>
			<search><![CDATA[if (isset($this->request->get['search']) || isset($this->request->get['tag'])) {]]></search>
			<add position="replace"><![CDATA[
				$mfp_settings = $this->config->get('mega_filter_settings');
				
				if (!empty($mfp_settings['allow_search_for_empty_keyword']) || isset($this->request->get['search']) || isset($this->request->get['tag'])) {
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$product_total = $this->model_catalog_product->getTotalProducts($filter_data);]]></search>
			<add position="before"><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
		
				if( ! empty( $fmSettings['show_products_from_subcategories'] ) ) {
					if( ! empty( $fmSettings['level_products_from_subcategories'] ) ) {
						$fmLevel = (int) $fmSettings['level_products_from_subcategories'];
						$fmPath = explode( '_', ! $this->rgetMFP('path') ? '' : $this->rgetMFP('path') );

						if( $fmPath && count( $fmPath ) >= $fmLevel ) {
							$filter_data['filter_sub_category'] = '1';
						}
					} else {
						$filter_data['filter_sub_category'] = '1';
					}
				}
				
				if( ! empty( $this->request->get['manufacturer_id'] ) ) {
					$filter_data['filter_manufacturer_id'] = (int) $this->request->get['manufacturer_id'];
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="catalog/controller/product/category.php">
		<operation>
			<search><![CDATA[$data['categories'] = array();]]></search>
			<add position="before"><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
				
				if( $this->rgetMFP('mfp_path') !== null && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfSt = mb_strpos( $url, '&', $mfpPos+1, 'utf-8');
					$mfp = $mfSt === false ? $url : mb_substr( $url, $mfpPos, $mfSt-1, 'utf-8' );
					$url = $mfSt === false ? '' : mb_substr($url, $mfSt, mb_strlen( $url, 'utf-8' ), 'utf-8');				
					$mfp = preg_replace( '#path(\[[^\]]+\],?|,[^/]+/?)#', '', urldecode( $mfp ) );
					$mfp = preg_replace( '#&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=&|&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=#', '', $mfp );
					
					if( $mfp ) {
						$url .= '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' . urlencode( $mfp );
					}
				}
				
				if( ! empty( $fmSettings['not_remember_filter_for_subcategories'] ) && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfUrlBeforeChange = $url;
					$mfSt = mb_strpos( $url, '&', $mfpPos+1, 'utf-8');
					$url = $mfSt === false ? '' : mb_substr($url, $mfSt, mb_strlen( $url, 'utf-8' ), 'utf-8');
				} else if( empty( $fmSettings['not_remember_filter_for_subcategories'] ) && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfUrlBeforeChange = $url;
					$url = preg_replace( '/,?path\[[0-9_]+\]/', '', $url );
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['products'] = array();]]></search>
			<add position="before"><![CDATA[
				if( isset( $mfUrlBeforeChange ) ) {
					$url = $mfUrlBeforeChange;
					unset( $mfUrlBeforeChange );
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$parts = explode('_', (string)$this->request->get['path']);]]></search>
			<add position="after"><![CDATA[
				if( $this->rgetMFP('mfp_path') !== null ) {
					$parts = explode('_', (string)$this->rgetMFP('mfp_path'));
				}
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="catalog/controller/product/category.php|catalog/controller/product/manufacturer.php|catalog/controller/product/search.php|catalog/controller/product/special.php|catalog/controller/extension/module/mega_filter.php">
		<operation>
			<search><![CDATA[$this->load->controller('common/header')]]></search>
			<add position="before"><![CDATA[
				if( class_exists( 'Mfilter_Helper' ) ) {
					Mfilter_Helper::createMetaLinks( $this, isset( $page ) ? $page : null, isset( $limit ) ? $limit : null, isset( $product_total ) ? $product_total : null, __CLASS__ );
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$url = '';]]></search>
			<add position="after"><![CDATA[
				if( $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp') ) {
					$url .= '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' . $this->rgetMFP($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp');
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->response->setOutput(]]></search>
			<add position="before"><![CDATA[
				$this->load->model( 'extension/module/mega_filter' );
				
				$data = $this->model_extension_module_mega_filter->prepareData( $data );
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[
				$fmSettings = $this->config->get('mega_filter_settings');
				
				if( ! empty( $fmSettings['not_remember_filter_for_products'] ) && false !== ( $mfpPos = strpos( $url, '&'.($this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp').'=' ) ) ) {
					$mfUrlBeforeChange = $url;
					$mfSt = mb_strpos( $url, '&', $mfpPos+1, 'utf-8');
					$url = $mfSt === false ? '' : mb_substr($url, $mfSt, mb_strlen( $url, 'utf-8' ), 'utf-8');
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/product/category.php|catalog/controller/product/manufacturer.php|catalog/controller/product/search.php|catalog/controller/product/special.php|catalog/controller/extension/module/mega_filter.php">
		<operation>
			<search><![CDATA[$product_total = $this->model_catalog_product->getTotalProduct]]></search>
			<add position="before"><![CDATA[
				$filter_data['mfp_overwrite_path'] = true;
				$filter_data['mfp_enabled'] = true;
			]]></add>
		</operation>
	</file>
	
	<!-- /////////////////////////////////////////////////////////////////// -->
	
	<file path="system/startup.php">
		<operation>
			<search><![CDATA[if (version_compare(phpversion()]]></search>
			<add position="before"><![CDATA[
				if( ! class_exists( 'VQMod' ) ) {
					class VQMod {
						public static $_vqversion = '2.6.1';
						public static $_virtualMFP = true;
						public static $directorySeparator = '';
						
						public static function modCheck( $path ) {
							return $path;
						}
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="system/engine/event.php" error="skip">
		<operation error="skip">
			<search><![CDATA[trigger($event, array $args = array()) {]]></search>
			<add position="after"><![CDATA[
				if( in_array( $event, array( 'model/extension/module/mega_filter/before', 'model/extension/module/mega_filter/after' ) ) ) {
					return;
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/feed/google_sitemap.php|catalog/controller/extension/feed/google_sitemap.php" error="skip">
		<operation>
			<search><![CDATA[$output .= '</urlset>';]]></search>
			<add position="before"><![CDATA[
				$this->load->model( 'extension/module/mega_filter' );
					
				$output .= $this->model_extension_module_mega_filter->createGoogleSitemap();
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/information/sitemap.php">
		<operation>
			<search><![CDATA[$this->response->setOutput(]]></search>
			<add position="before"><![CDATA[
				$this->load->model( 'extension/module/mega_filter' );
					
				$data = $this->model_extension_module_mega_filter->createSitemap( $data );
			]]></add>
		</operation>
	</file>
	
	<file path="system/library/document.php">
		<operation error="skip">
			<search><![CDATA[public function mfp_removeLink( $rel ) {foreach( $this->links as $k => $v ) {if( $v['rel'] == $rel ) {unset( $this->links[$k] );}}}]]></search>
			<add position="replace"><![CDATA[]]></add>
		</operation>
	</file>
	
	<file path="system/library/document.php">
		<operation error="skip">
			<search><![CDATA[class Document {]]></search>
			<add position="after"><![CDATA[
				public function mfp_removeLink( $rel ) {foreach( $this->links as $k => $v ) {if( $v['rel'] == $rel ) {unset( $this->links[$k] );}}}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/module/special.php|catalog/controller/extension/module/special.php" error="skip">
		<operation error="log">
			<search><![CDATA[$filter_data = array(]]></search>
			<add position="after"><![CDATA[
				'mfp_disabled' => true,
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/language.php" error="skip">
		<operation error="skip">
			<search><![CDATA[function language() {]]></search>
			<add position="after"><![CDATA[
				if( ! empty( $this->request->post['redirect'] ) ) {
					$this->load->model('extension/module/mega_filter');
				
					$this->request->post['redirect'] = $this->model_extension_module_mega_filter->removeSeoMfpFromUrl( $this->request->post['redirect'], true );
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[unset($url_data['route']);]]></search>
			<add position="after"><![CDATA[
				if( isset( $url_data[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) ) {
					unset( $url_data[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] );
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/header.php" error="log">
		<operation error="log">
			<search><![CDATA[function index(]]></search>
			<add position="after"><![CDATA[
				if( ! isset( $this->request->request['mfp_seo_alias'] ) ) {
					$mfilterSeoConfig = $this->config->get('mega_filter_seo');

					if( ! empty( $mfilterSeoConfig['meta_robots'] ) && ! empty( $this->request->get[$this->config->get('mfilter_url_param')?$this->config->get('mfilter_url_param'):'mfp'] ) ) {
						$data['mfp_robots_value'] = $mfilterSeoConfig['meta_robots_value'];
					}
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/view/theme/*/template/common/header.twig" error="log">
		<operation error="log">
			<search><![CDATA[</head>]]></search>
			<add position="replace"><![CDATA[
				{% if mfp_robots_value %} <meta name="robots" content="{{ mfp_robots_value }}" />{% endif %}
				</head>
			]]></add>
		</operation>
	</file>
	
	<file path="system/engine/loader.php">
		<operation>
			<search><![CDATA[public function view($route, $data = array()) {]]></search>
			<add position="after"><![CDATA[
				$ext = isset( $ext ) ? $ext : null;

				if( false !== ( $dot_pos = strrpos( $route, '.' ) ) ) {
					$ext = substr( $route, $dot_pos + 1 );
					$route = preg_replace( '/\.tpl$/', '', $route );
				} else if( false !== strpos( $route, 'mega_filter' ) ) {
					$ext = 'tpl';
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$template = new Template($this->registry->get('config')->get('template_engine'));]]></search>
			<add position="replace"><![CDATA[
				if( $ext == 'tpl' ) {
					$template = new Template('template');
				} else {
					$template = new Template($this->registry->get('config')->get('template_engine'));
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$template = new Template($this->registry->get('config')->get('template_engine'), $this->registry);]]></search>
			<add position="replace"><![CDATA[
				if( $ext == 'tpl' ) {
					$template = new Template('template', $this->registry);
				} else {
					$template = new Template($this->registry->get('config')->get('template_engine'), $this->registry);
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->registry->get('config')->get('template_directory')]]></search>
			<add position="replace"><![CDATA[(!defined('HTTP_CATALOG')&&!$this->registry->get('config')->get('template_directory')&&$ext=='tpl'?'default/template/':$this->registry->get('config')->get('template_directory'))]]></add>
		</operation>
	</file>

</modification>